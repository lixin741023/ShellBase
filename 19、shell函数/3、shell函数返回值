// Shell 中函数的返回值表示的是函数的退出状态：
// 返回值为 0 表示函数执行成功了，
// 返回值为非 0 表示函数执行失败（出错）了。
// <|
// if、while、for 等语句都是根据函数的退出状态来判断条件是否成立。

// Shell 函数的返回值只能是一个介于 0~255 之间的整数，其中只有 0 表示成功，其它值都表示失败。

// 问：如何得到函数执行的结果？？
// <|
// 这个问题有两种解决方案：
// 一种是借助全局变量，将得到的结果赋值给全局变量；
// 一种是在函数内部使用 echo、printf 命令将结果输出，在函数外部使用$()或者``捕获结果。

// $?
// 返回上一条命令的退出状态

// 我我们可以自定义退出状态：
// 比如一个打开文件的函数，我们可以指定 1 表示文件不存在，2 表示文件没有读取权限，3 表示文件类型不对。
// 如果函数体中没有 return 语句，那么使用默认的退出状态，也就是最后一条命令的退出状态。那么更加严谨的写法为：
// return $?
